<?xml version="1.0" encoding="utf-8"?>
<grammar ns="http://www.daisy.org/ns/z3998/authoring/" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink">
    <info xmlns="http://docbook.org/ns/docbook">
        <title xreflabel="headings">The headings module</title>
        <annotation annotates="/">
            <para role="desc-main">This module defines the {[[#z3998.h]]}, {[[#z3998.hd]]} and {[[#z3998.hpart]]} elements for representing headings and heading segments.</para>
            <simplelist role="def-dependencies">
                <member xlink:href="z3998-global-classes.rng"/>
                <member xlink:href="z3998-datatypes.rng"/>
                <member xlink:href="z3998-linking.rng"/>
            </simplelist>
        </annotation>
        <author>
            <personname>Markus Gylling</personname>
            <email>mgylling@daisy.org</email>
        </author>
        <copyright>
            <year>2009</year>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>DAISY Consortium</holder>
        </copyright>
        <legalnotice>
            <para>This module is licensed under a Creative Commons Attribution 3.0 license, a copy of which is available at <link xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</link></para>
            <para>For complete licensing information, please refer to the LICENSE file that came with this distribution, a copy of which is also available from the DAISY web site at <link xlink:href="http://www.daisy.org">www.daisy.org</link></para>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2012-12-19</date>
                <authorinitials>MGy</authorinitials>
                <revdescription>
                    <para>Initial version</para>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <div>
        <define name="z3998.h" xml:id="z3998.h">
            <element name="h">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="h">The {h} element</title>
                    <para role="desc-main">The {h} element represents a structural heading.</para>
                    <para role="desc-sub">The {h} element is strongly associated with the {[[#z3998.section]]} element and its specializations. Each section typically allows zero or one {h} element child.</para>
                    <synopsis role="def-context" condition="No element may allow more than one {h} element in its content model.">[[#z3998.Section.class]]</synopsis>
                    <synopsis role="def-content">{([[#z3998.hpart]] | text | [[#z3998.Text.class]] | Phrase.core.class | Phrase.extern.class)+}</synopsis>
                    <synopsis role="def-attlist">[[#z3998.Block.attrib]]</synopsis>
                </annotation>
                <ref name="z3998.h.attlist"/>
                <ref name="z3998.h.content"/>
                <sch:rule context="default:h">
                    <sch:assert test="normalize-space(.) or *">The {h} element must neither be empty nor contain only whitespace.</sch:assert>
                </sch:rule>
            </element>
        </define>
        <define name="z3998.h.attlist" xml:id="z3998.h.attlist">
            <ref name="z3998.Block.attrib"/>
        </define>
        <define name="z3998.h.content" xml:id="z3998.h.content">
            <oneOrMore>
                <choice>
                    <ref name="z3998.Phrase.core.Text.mix.model"/>
                    <ref name="z3998.hpart"/>
                </choice>
            </oneOrMore>
        </define>
    </div>
    <div>
        <define name="z3998.hpart" xml:id="z3998.hpart">
            <element name="hpart">
                <annotation annotates=".." xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="hpart">The {hpart} element</title>
                    <para role="desc-main">The {hpart} element represents a segment of a structural heading.</para>
                    <para role="desc-sub">The {hpart} element is typically used to separate numeric identifiers from headings or to separate segments of headings broken onto separate lines.</para>
                    <synopsis role="def-context" condition="fixed">[[#z3998.h]]</synopsis>
                    <synopsis role="def-content">{(text | [[#z3998.Text.class]] | Phrase.core.class | Phrase.extern.class)+}</synopsis>
                    <synopsis role="def-attlist">[[#z3998.Phrase.attrib]]</synopsis>
                </annotation>
                <ref name="z3998.hpart.attlist"/>
                <ref name="z3998.hpart.content"/>
                <sch:rule context="default:hpart">
                    <sch:assert test="normalize-space(.) or *">The {hpart} element must neither be empty nor contain only whitespace.</sch:assert>
                </sch:rule>
            </element>
        </define>
        <define name="z3998.hpart.attlist" xml:id="z3998.hpart.attlist">
            <ref name="z3998.Phrase.attrib"/>
        </define>
        <define name="z3998.hpart.content" xml:id="z3998.hpart.content">
            <ref name="z3998.Phrase.core.Text.mix.model"/>
        </define>
    </div>
    <div>
        <define name="z3998.hd" xml:id="z3998.hd">
            <element name="hd">
                <annotation annotates=".." xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="hd">The {hd} element</title>
                    <para role="desc-main">The {hd} element represents a free-floating heading that is not associated with the hierarchical structure of the document.</para>
                    <para role="desc-sub">The {[[#z3998.ref.attrib]]} attribute may be used to associate an {hd} element with a construct that it acts as a heading for.</para>
                    <synopsis role="def-context">{[[#z3998.Block.class]]}</synopsis>
                    <synopsis role="def-content">{(text | [[#z3998.Text.class]] | Phrase.core.class | Phrase.extern.class)+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Block.attrib]]}, {[[#z3998.ref.attrib]]?}</synopsis>
                </annotation>
                <ref name="z3998.hd.attlist"/>
                <ref name="z3998.hd.content"/>
                <sch:rule context="default:hd">
                    <sch:assert test="normalize-space(.) or *">The {hd} element must neither be empty nor contain only whitespace.</sch:assert>
                </sch:rule>
            </element>
        </define>
        <define name="z3998.hd.attlist" combine="interleave">
            <ref name="z3998.Block.attrib"/>
            <optional>
                <ref name="z3998.ref.attrib"/>
            </optional>
        </define>
        <define name="z3998.hd.content" combine="choice">
            <ref name="z3998.Phrase.core.Text.mix.model"/>
        </define>
        <div>
            <a:documentation>hd - default content model contribution</a:documentation>
            <define name="z3998.Block.core.class" combine="choice">
                <ref name="z3998.hd"/>
            </define>
            <define name="z3998.Block.basic.model" combine="choice">
                <ref name="z3998.hd"/>
            </define>
        </div>
    </div>
</grammar>
