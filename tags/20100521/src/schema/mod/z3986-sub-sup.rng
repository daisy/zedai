<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
  ns="http://www.daisy.org/ns/z3986/authoring/"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
  xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:z="http://www.daisy.org/ns/z3986/annotations/#"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">

  <rdf:RDF>
    <rdf:Description>
      <dcterms:title z:short="super-subscript">The super- and subscript module</dcterms:title>
      <dcterms:description>This module defines the [[#z3986.sub]] and [[#z3986.sup]] elements for marking superscripts and subscripts.</dcterms:description>               
      <dcterms:publisher>DAISY Consortium</dcterms:publisher>
      <dcterms:license rdf:resource="{LICENSE_TODO}" />
      <dcterms:creator>Markus Gylling</dcterms:creator>      
      <dcterms:issued>2009-12-21</dcterms:issued>
      <dcterms:requires rdf:resource="z3986-global-classes.rng"/>      
    </rdf:Description>
  </rdf:RDF>
  
  <div>        
    <define name="z3986.sub">
      <element name="sub">   
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="sub">The {sub} element</dcterms:title>
            <dcterms:description>The {sub} element represents instances of subscripted text.</dcterms:description>      
            <dcterms:isRequiredBy rdf:resource="."/>                     
            <z:context>{[[#z3986.Text.class]]}</z:context>          
            <z:content>{(text | [[#z3986.Text.class]])+}</z:content>          
            <z:attlist>{[[#z3986.Text.attrib]]}</z:attlist>      
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.sub.attlist"/>
        <ref name="z3986.sub.content"/>  
        <sch:rule context="default:sub">
          <sch:assert test="count(*) > 0 or string-length(normalize-space(.)) > 0"
            >The {sub} element must neither be empty nor contain only whitespace.</sch:assert>
        </sch:rule>
      </element>    
    </define>

    <define name="z3986.sub.attlist">
      <ref name="z3986.Text.attrib"/>
    </define>
    
    <define name="z3986.sub.content">
      <ref name="z3986.Text.model"/>
    </define>  
    
  </div>  
  
  <div>        
    <define name="z3986.sup">
      <element name="sup">   
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="sup">The {sup} element</dcterms:title>
            <dcterms:description>The {sup} element represents instances of superscripted text.</dcterms:description>      
            <dcterms:isRequiredBy rdf:resource="."/>                     
            <z:context>{[[#z3986.Text.class]]}</z:context>          
            <z:content>{(text | [[#z3986.Text.class]])+}</z:content>          
            <z:attlist>{[[#z3986.Text.attrib]]}</z:attlist>      
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.sup.attlist"/>
        <ref name="z3986.sup.content"/> 
        <sch:rule context="default:sup">
          <sch:assert test="count(*) > 0 or string-length(normalize-space(.)) > 0"
            >The {sup} element must neither be empty nor contain only whitespace.</sch:assert>
        </sch:rule>        
      </element>    
    </define>

    <define name="z3986.sup.attlist">
      <ref name="z3986.Text.attrib"/>
    </define>
    
    <define name="z3986.sup.content">
      <ref name="z3986.Text.model"/>
    </define>  
    
  </div>   
  
  <div>
    <a:documentation>sup and sub - default content model contribution</a:documentation>
    
    <define name="z3986.Text.core.class" combine="choice">
      <ref name="z3986.sub"/>
    </define>
    
    <define name="z3986.Text.core.class" combine="choice">
      <ref name="z3986.sup"/>
    </define>
        
  </div>

</grammar>