<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" 
  ns="http://www.daisy.org/ns/z3986/authoring/"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
  xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:z="http://www.daisy.org/ns/z3986/annotations/#"
  xmlns:xsdp="http://www.daisy.org/ns/rng-preprocess/xsd"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">

  <rdf:RDF>
    <rdf:Description>
      <dcterms:title z:short="cover">The cover module</dcterms:title>
      <dcterms:description>This module defines the {[[#z3986.cover]]} element for including images and content
        originally reproduced on the covers and jackets of publications.</dcterms:description>
      <dcterms:publisher>DAISY Consortium</dcterms:publisher>
      <dcterms:license rdf:resource="{LICENSE_TODO}"/>
      <dcterms:creator>Markus Gylling</dcterms:creator>
      <dcterms:issued>2009-12-21</dcterms:issued>
      <dcterms:requires rdf:resource="z3986-global-classes.rng"/>
      <dcterms:requires rdf:resource="z3986-datatypes.rng"/>
    </rdf:Description>
  </rdf:RDF>

  <div>
    <define name="z3986.cover">
      <element name="cover">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="cover">The {cover} element</dcterms:title>
            <dcterms:description>The {cover} element represents the complete cover or jacket of a print publication.</dcterms:description>
            <dcterms:isRequiredBy rdf:resource="."/>
            <z:context>{[[#z3986.Section.class]]}</z:context>
            <z:content z:alterability="The {cover} element must contain at least one of its {[[#z3986.spine spine]]}, {[[#z3986.frontcover frontcover]]}, {[[#z3986.backcover backcover]]} or {[[#z3986.flaps flaps]]} children.">{[[#z3986.spine]]?, [[#z3986.frontcover]]?, [[#z3986.backcover]]?, [[#z3986.flaps]]?}</z:content>
            <z:attlist>{[[#z3986.Section.attrib]]}</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.cover.attlist"/>
        <ref name="z3986.cover.content"/>
        <sch:rule context="default:cover">
          <sch:assert test="count(*) > 0">The {cover} element must contain at least one of its
            allowed children.</sch:assert>
        </sch:rule>
      </element>
    </define>

    <define name="z3986.cover.attlist">
      <ref name="z3986.Section.attrib"/>
    </define>

    <define name="z3986.cover.content">
      <optional>
        <ref name="z3986.spine"/>
      </optional>
      <optional>
        <ref name="z3986.frontcover"/>
      </optional>
      <optional>
        <ref name="z3986.backcover"/>
      </optional>
      <optional>
        <ref name="z3986.flaps"/>
      </optional>
    </define>
  </div>

  <div>

    <define name="z3986.spine">
      <element name="spine">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="spine">The {spine} element</dcterms:title>
            <dcterms:description>The {spine} element represents the section of the cover that overlays the bound inner side 
              of a publication.</dcterms:description>
            <z:info doc-only="true">The spine typically contains the author/editor name(s), title and the
              publisher/imprint logo. Information on the spine is often truncated because of space constraints.</z:info>
            <z:context z:alterability="fixed">{[[#z3986.cover]]}</z:context>
            <z:content>{(z3986.Block.class)+ | (text | z3986.Text.class | z3986.Phrase.class)+}</z:content>
            <z:attlist>{[[#z3986.Section.attrib]]}</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.spine.attlist"/>
        <ref name="z3986.spine.content"/>
      </element>
    </define>

    <define name="z3986.spine.attlist">
      <ref name="z3986.Section.attrib"/>
    </define>

    <define name="z3986.spine.content">
      <!-- dont ref the predefined Flow.choice.model as it contains Global.extra (w pagebreak) -->
      <choice>
        <oneOrMore>
	        <choice>
	            <ref name="z3986.Block.class"/>
	        </choice>
        </oneOrMore>
        <oneOrMore>
            <choice>
                <ref name="Characters.datatype"/>
                <ref name="z3986.Text.class"/>
                <ref name="z3986.Phrase.class"/>
            </choice>
         </oneOrMore>
      </choice>
    </define>

  </div>

  <div>
    <define name="z3986.frontcover">
      <element name="frontcover">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="frontcover">The {frontcover} element</dcterms:title>
            <dcterms:description>The {frontcover} element represents all content and images contained on the inside and outside of 
              the front cover.</dcterms:description>
            <z:info doc-only="true">The front outside cover typically contains the title and/or author information overlaid on an illustration.</z:info>
            <z:info doc-only="true">The front inside cover may contain maps, additional books by the author, pricing, ISBN numbers, etc.</z:info>
            <z:context z:alterability="fixed">{[[#z3986.cover]]}</z:context>
            <z:content>{[[#z3986.Block.class]]+}</z:content>
            <z:attlist>{[[#z3986.Section.attrib]]}</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.frontcover.attlist"/>
        <ref name="z3986.frontcover.content"/>
      </element>
    </define>

    <define name="z3986.frontcover.attlist">
      <ref name="z3986.Section.attrib"/>
    </define>

    <define name="z3986.frontcover.content" combine="interleave">
      <ref name="z3986.covers.content"/>
    </define>

  </div>

  <div>
    <define name="z3986.covers.content">
        <oneOrMore>
          <ref name="z3986.Block.class"/>
        </oneOrMore>     
    </define>
  </div>

  <div>
    <define name="z3986.backcover">
      <element name="backcover">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="backcover">The {backcover} element</dcterms:title>
            <dcterms:description>The {backcover} element represents all content and images contained on the inside and outside of 
              the back cover.</dcterms:description>
            <z:info doc-only="true">The back covers typically contain biographical information about contributors, quotes, and
              a summary or description of the publication.</z:info>
            <z:context z:alterability="fixed">{[[#z3986.cover]]}</z:context>
            <z:content>{[[#z3986.Block.class]]+}</z:content>
            <z:attlist>{[[#z3986.Section.attrib]]}</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.backcover.attlist"/>
        <ref name="z3986.backcover.content"/>
      </element>
    </define>

    <define name="z3986.backcover.attlist" combine="interleave">
      <ref name="z3986.Section.attrib"/>
    </define>

    <define name="z3986.backcover.content" combine="interleave">
      <ref name="z3986.covers.content"/>
    </define>
  </div>

  <div>   
    <define name="z3986.flaps">
      <element name="flaps">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="flaps">The {flaps} element</dcterms:title>
            <dcterms:description>The {flaps} element represents all content and images contained on the front and back
            jacket flaps.</dcterms:description>
            <z:info doc-only="true">Content on the flaps may continue unbroken from the front to the back.</z:info>
            <z:context z:alterability="fixed">{[[#z3986.cover]]}</z:context>
            <z:content>{[[#z3986.Block.class]]+}</z:content>
            <z:attlist>{[[#z3986.Section.attrib]]}</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.flaps.attlist"/>
        <ref name="z3986.flaps.content"/>
      </element>
    </define>

    <define name="z3986.flaps.attlist">
      <ref name="z3986.Section.attrib"/>
    </define>

    <define name="z3986.flaps.content" combine="interleave">
      <ref name="z3986.covers.content"/>
    </define>
  </div>

  <div>
    <a:documentation>cover - default content model contribution</a:documentation>
    <a:documentation>contribute cover into the dedicated slot in the partitions module</a:documentation> 
    <define name="z3986.partitions.cover.slot" combine="choice">
      <ref name="z3986.cover"/>
    </define>  
  </div>
  

  

</grammar>
