<?xml version="1.0" encoding="utf-8"?>
<grammar ns="http://www.daisy.org/ns/z3986/authoring/" 
	xmlns="http://relaxng.org/ns/structure/1.0"
	xmlns:sch="http://purl.oclc.org/dsdl/schematron"
	xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
	xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- TODO note XHTML inheritance -->
    <!-- TODO note specialization of ref -->
    <!-- TODO contstraint: fallback text and/or ext annotation -->
    <info xmlns="http://docbook.org/ns/docbook">
        <title xreflabel="object">The object module</title>
        <annotation annotates="/">
            <para role="desc-main">This module defines the {[[#z3986.object.block]]} element for including graphics, video and other external objects.</para>
            <para role="desc-sub">Three variants of the {object} element are defined for use in the [[#z3986.Block.class Block]], [[#z3986.Phrase.class Phrase]] and [[#z3986.Text.class Text]] classes respectively.</para>
            <simplelist role="def-dependencies">
                <member xlink:href="z3986-global-classes.rng"/>
                <member xlink:href="z3986-linking.rng"/>
            </simplelist>
        </annotation>
        <author>
            <personname>Markus Gylling</personname>
            <email>mgylling@daisy.org</email>
        </author>
        <copyright>
            <year>2009</year>
            <year>2010</year>
            <year>2011</year>
            <holder>DAISY Consortium</holder>
        </copyright>
        <legalnotice>
            <para>This module is licensed under a Creative Commons Attribution 3.0 license, a copy of which is available at <link xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</link></para>
            <para>For complete licensing information, please refer to the LICENSE file that came with this distribution, a copy of which is also available from the DAISY web site at <link xlink:href="http://www.daisy.org">www.daisy.org</link></para>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2011-03-04</date>
                <authorinitials>MGy</authorinitials>
                <revdescription>
                    <para>Initial version</para>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <div>
        <define name="z3986.object.block" xml:id="z3986.object.block">
            <element name="object">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="object (block)">The {object} element (Block)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <para role="desc-sub">The {Block} variant is an adaptation for use embedding objects that are intended to be offset from any surrounding block elements.</para>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <synopsis role="def-context">{[[#z3986.Block.class]]}</synopsis>
                    <synopsis role="def-content">{(empty | ([[#z3986.Block.class]])+ | (text | [[#z3986.Text.class]] | [[#z3986.Phrase.class]])+)}</synopsis>
                    <synopsis role="def-attlist" condition="The attribute model must allow the {[[#z3986.src.attrib src]]} and {[[#z3986.srctype.attrib srctype]]} attributes.">{[[#z3986.src.attrib]], [[#z3986.srctype.attrib]]?, [[#z3986.Block.attrib]]}</synopsis>
                    <para role="def-specialization">This element is a specialization of the {[[#z3986.ref]]} element with the XLink behaviors {xlink:show="embed"} and {xlink:actuate="onLoad"}.</para>
                </annotation>
                <ref name="z3986.object.block.attlist"/>
                <ref name="z3986.object.block.content"/>
                <sch:rule context="default:object">
                    <sch:report test="descendant::*[not(namespace-uri(.) = 'http://www.daisy.org/ns/z3986/authoring/')]">The {description} element must not contain any descendant elements from Z39.86-AI feature grammars.</sch:report>
                </sch:rule>
            </element>
        </define>
        <define name="z3986.object.phrase" xml:id="z3986.object.phrase">
            <element name="object">
                <annotation annotates=".." xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="object (phrase)">The {object} element (Phrase)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <para role="desc-sub">The {Phrase} variant is an adaption for use embedding objects in phrasal constructs.</para>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <synopsis role="def-context">{[[#z3986.Phrase.class]]}</synopsis>
                    <synopsis role="def-content">{(empty | (text | [[#z3986.Text.class]] | [[#z3986.Phrase.class]])+)}</synopsis>
                    <synopsis role="def-attlist" condition="The attribute model must allow the {[[#z3986.src.attrib src]]} and {[[#z3986.srctype.attrib srctype]]} attributes.">{[[#z3986.src.attrib]], [[#z3986.srctype.attrib]]?, [[#z3986.Phrase.attrib]]}</synopsis>
                    <para role="def-specialization">This element is a specialization of the {[[#z3986.ref]]} element with the XLink behaviors {xlink:show="embed"} and {xlink:actuate="onLoad"}.</para>
                </annotation>
                <ref name="z3986.object.phrase.attlist"/>
                <ref name="z3986.object.phrase.content"/>
            </element>
        </define>
        <define name="z3986.object.text" xml:id="z3986.object.text">
            <element name="object">
                <annotation annotates=".." xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="object (text)">The {object} element (Text)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <para role="desc-sub">The {Text} variant is an adaption for use representing objects at the character level.</para>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3986.object"/>
                    <synopsis role="def-context">{[[#z3986.Text.class]]}</synopsis>
                    <synopsis role="def-content">{(empty | (text | [[#z3986.Text.class]])+)}</synopsis>
                    <synopsis role="def-attlist" condition="The attribute model must allow the {[[#z3986.src.attrib src]]} and {[[#z3986.srctype.attrib srctype]]} attributes.">{[[#z3986.src.attrib]], [[#z3986.srctype.attrib]]?, [[#z3986.Text.attrib]]}</synopsis>
                    <para role="def-specialization">This element is a specialization of the {[[#z3986.ref]]} element with the XLink behaviors {xlink:show="embed"} and {xlink:actuate="onLoad"}.</para>
                </annotation>
                <ref name="z3986.object.text.attlist"/>
                <ref name="z3986.object.text.content"/>
            </element>
        </define>
        <define name="z3986.object.block.attlist" xml:id="z3986.object.block.attlist">
            <ref name="z3986.Block.noextern.attrib"/>
            <ref name="z3986.Embed.attrib"/>
        </define>
        <define name="z3986.object.phrase.attlist" xml:id="z3986.object.phrase.attlist">
            <ref name="z3986.Phrase.noextern.attrib"/>
            <ref name="z3986.Embed.attrib"/>
        </define>
        <define name="z3986.object.text.attlist" xml:id="z3986.object.text.attlist">
            <ref name="z3986.Text.noextern.attrib"/>
            <ref name="z3986.Embed.attrib"/>
        </define>
        <define name="z3986.object.block.content" xml:id="z3986.object.block.content">
            <choice>
                <ref name="z3986.object.block.content.extern"/>
                <ref name="z3986.Flow.choice.noextern.model"/>
            </choice>
        </define>
        <define name="z3986.object.block.content.extern" xml:id="z3986.object.block.content.extern">
            <empty/>
        </define>
        <define name="z3986.object.phrase.content" xml:id="z3986.object.phrase.content">
            <choice>
                <ref name="z3986.object.phrase.content.extern"/>
                <ref name="z3986.Phrase.noextern.model"/>
            </choice>
        </define>
        <define name="z3986.object.phrase.content.extern" xml:id="z3986.object.phrase.content.extern">
            <empty/>
        </define>
        <define name="z3986.object.text.content" xml:id="z3986.object.text.content">
            <choice>
                <ref name="z3986.object.text.content.extern"/>
                <ref name="z3986.Text.model"/>
            </choice>
        </define>
        <define name="z3986.object.text.content.extern" xml:id="z3986.object.text.content.extern">
            <empty/>
        </define>
    </div>
    <div>
        <a:documentation>object - default content model contribution</a:documentation>
        <define name="z3986.Text.core.class" combine="choice">
            <ref name="z3986.object.text"/>
        </define>
        <define name="z3986.Phrase.core.class" combine="choice">
            <ref name="z3986.object.phrase"/>
        </define>
        <define name="z3986.Block.core.class" combine="choice">
            <ref name="z3986.object.block"/>
        </define>
        <define name="z3986.char.class" combine="choice">
            <ref name="z3986.object.text"/>
        </define>
        <define name="z3986.Block.basic.model" combine="choice">
            <ref name="z3986.object.block"/>
        </define>
    </div>
</grammar>
