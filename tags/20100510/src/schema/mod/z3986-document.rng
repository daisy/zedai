<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" ns="http://www.daisy.org/ns/z3986/authoring/"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
  xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:z="http://www.daisy.org/ns/z3986/annotations/#"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">

  <rdf:RDF>
    <rdf:Description>
      <dcterms:title z:short="document">The document module</dcterms:title>
      <dcterms:description>This module defines the {[[#z3986.document]]}, {[[#z3986.head]]} and {[[#z3986.body]]} core
        structural elements common to all Z39.86-AI Profiles.</dcterms:description>
      <dcterms:publisher>DAISY Consortium</dcterms:publisher>
      <dcterms:license rdf:resource="{LICENSE_TODO}"/>
      <dcterms:creator>Markus Gylling</dcterms:creator>
      <dcterms:issued>2009-12-21</dcterms:issued>
      <dcterms:isRequiredBy rdf:resource="http://www.daisy.org/z3986/2010/auth/"/>      
      <dcterms:requires rdf:resource="z3986-i18n-attrib.rng"/>       
      <dcterms:requires rdf:resource="z3986-role-attrib.rng"/>       
      <dcterms:requires rdf:resource="rdfa-attrib.rng"/>       
      <dcterms:requires rdf:resource="z3986-global-classes.rng"/>
      <dcterms:requires rdf:resource="z3986-meta.rng"/>       
      <dcterms:requires rdf:resource="z3986-section.rng"/>       
    </rdf:Description>
  </rdf:RDF>

  <start>
    <ref name="z3986.document"/>
  </start>

  <!-- TODO SCH (?)      
      * each instance must contain <meta rel="z:profile" resource="URI" /> where z: resolves to the decl vocab
       (and URI must be a resolving profile uri)
      * each instance must contain <meta rel="z:feature" resource="URI" /> for each feature actually used in body,
         where z: resolves to the decl vocab (and URI must be a resolving profile uri)
      * each instance must not contain <meta rel="z:feature" resource="URI" /> for a feature that isnt used
      * the optional <meta rel="z:meta-record" href="{xsd:anyURI}" />
         must if given be accompanied by a 
         <meta property="z:meta-record-type" about="{xsd:anyURI}" content="z:mods" /> 
         , where the the values of meta-record/@href and meta-record-type/@about resolve to the same resource
         and where z: resolves to the decl vocab, and meta-record-type/@content suffix is one of the values the decl vocab allows
      * if the optional <meta property="z:meta-record-version" is given, its @about value must resolve to the same resource
          as the href value on a meta with rel="z:meta-record"
      * each instance must contain one <meta> element each for the following three:
          identifier, publisher, date
          from the dc terms vocab (http://purl.org/dc/terms/)
          where date must conform to w3c dateTime or date datatypes, the other twos @content cannot be empty
          example:
            <head xmlns:dcterms="http://purl.org/dc/terms/">
            <meta property="dcterms:identifier"  content="{nonEmptyNorWhitespaceOnlyString}" />
            <meta property="dcterms:publisher" content="{nonEmptyNorWhitespaceOnlyString}" />
            <meta property="dcterms:date" content="{xsd:dateTime} or {xsd:date}" />
       
       Alternatives to do this:
        * only SCH (wont be able to check that given profile/feature RD URIs resolve, may become very complex)
        * RNG+SCH (would need to fix meta element order, + fixed prefix for qnames in @property, @rel)
        * A dedicated standalone software pass (type: StAX), which could do the online checking stuff as well, 
        keep expandable catalogs of known profile/feature URIs, etc
        * Only SCH + a custom RelaxNG datatype "ProfileOrFeatureResourceDirectoryURI"
        * RNG + SCH + a custom RelaxNG datatype "ProfileOrFeatureResourceDirectoryURI"
        
        Question for SCH approaches is if xsd:date etc is supported in the non-commercial version of Saxon.
        
        An argument for RNG and/or SCH is that its good to have as tests as possible in the "core" schema 
        that people use. OTOH, it may be "preferable" to have the meta validation as a last step (so one
        does not have to worry about it in the early stages of the markup process)
        
       QNames in content w xpath: 
       http://uszla.me.uk/space/blog/2008/04/23
       http://www.w3.org/TR/xquery-operators/#func-namespace-uri-from-QName
       XPath2 support in Schematron     
       http://www.schematron.com/tmp/iso-schematron-xslt2.zip 

  -->

  <div>
    <define name="z3986.document">
      <element name="document">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="document">The {document} element</dcterms:title>
            <dcterms:description>The {document} element is the root element of all Z39.86-AI
              Profiles.</dcterms:description>
            <dcterms:isRequiredBy rdf:resource="."/>
            <z:context>Document root.</z:context>
            <z:content fixed="true">{[[#z3986.head]], [[#z3986.body]]}</z:content>
            <z:attlist>[[#z3986.Document.attrib]]; the {[[#xml.lang.attrib]]} attribute required</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.document.attlist"/>
        <ref name="z3986.head"/>
        <ref name="z3986.body"/>
      </element>
    </define>

    <define name="z3986.document.attlist">
      <!-- expand out to make xml:lang required -->
      <ref name="z3986.Core.attrib"/>
      <ref name="z3986.I18n.attrib.xml.lang.required"/>
      <optional>
        <ref name="z3986.role.attrib"/>
      </optional>    
      <ref name="Rdfa.attrib"/>
      <ref name="z3986.Document.contrib.attrib"/>
    </define>
  </div>

  <div>
    <define name="z3986.head">
      <element name="head">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="head">The {head} element</dcterms:title>
            <dcterms:description>The {head} element contains meta information about the 
            complete or partial document contained in the enclosing {[[#z3986.document]]}.</dcterms:description>
            <z:info>The meta information in the {head} element is not document content in the context of Z39.86-AI documents, but may be used for display and other purposes when rendering documents into alternate formats.</z:info>
            <z:info absdef-only="true">Every valid Z39.86-AI profile must allow one or more {[[#z3986.meta]]} elements
              in its {head} element.</z:info>
            <z:info doc-only="true">Refer to [[#documentsMetadata Document metadata]] for the normative specification of required metadata in {head}.</z:info>
            <dcterms:isRequiredBy rdf:resource="."/>
            <z:context>[[#z3986.document]]</z:context>
            <z:content>{[[#z3986.meta]]+}</z:content>
            <z:attlist>[[#z3986.Document.attrib]]</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.head.attlist"/>
        <ref name="z3986.head.content"/>
      </element>
    </define>

    <define name="z3986.head.attlist">
      <ref name="z3986.Document.attrib"/>
    </define>

    <define name="z3986.head.content">
      <oneOrMore>
        <choice>
          <ref name="z3986.head.class"/>
        </choice>
      </oneOrMore>
    </define>

    <define name="z3986.head.class" combine="choice">
      <ref name="z3986.meta"/>
    </define>
  </div>

  <div>
    <define name="z3986.body">
      <element name="body">
        <rdf:RDF>
          <rdf:Description>
            <dcterms:title z:short="body">The {body} element</dcterms:title>
            <dcterms:description>The {body} element contains the complete or partial content of the enclosing {[[#z3986.document]]}.</dcterms:description>
            <dcterms:isRequiredBy rdf:resource="."/>
            <z:context>{[[#z3986.document]]}</z:context>
            <z:content>{([[#z3986.h]]? &amp;amp; [[#z3986.Block.class]]*), [[#z3986.Section.class]]*}</z:content>
            <z:attlist>[[#z3986.Document.attrib]]</z:attlist>
          </rdf:Description>
        </rdf:RDF>
        <ref name="z3986.body.attlist"/>
        <ref name="z3986.body.content"/>
      </element>
    </define>

    <define name="z3986.body.attlist">
      <ref name="z3986.Document.attrib"/>
    </define>

    <define name="z3986.body.content">
      <ref name="z3986.section.content"/>
    </define>

  </div>

</grammar>
