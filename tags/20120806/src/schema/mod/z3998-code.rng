<?xml version="1.0" encoding="utf-8"?>
<grammar ns="http://www.daisy.org/ns/z3998/authoring/" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink">
    <info xmlns="http://docbook.org/ns/docbook">
        <title xreflabel="code">The code module</title>
        <annotation annotates="/">
            <para role="desc-main">This module defines the {[[#z3998.code.block]]} element for marking instances of computer code, commands and coded alphabets and systems.</para>
            <para role="desc-sub">Two variants of the {code} element are available: one for use in a [[#z3998.Block.class Block]] context and a second for use in a [[#z3998.Phrase.class Phrase]] context.</para>
            <simplelist role="def-dependencies">
                <member xlink:href="z3998-global-classes.rng"/>
                <member xlink:href="z3998-line.rng"/>
            </simplelist>
        </annotation>
        <author>
            <personname>Markus Gylling</personname>
            <email>mgylling@daisy.org</email>
        </author>
        <copyright>
            <year>2009</year>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>DAISY Consortium</holder>
        </copyright>
        <legalnotice>
            <para>This module is licensed under a Creative Commons Attribution 3.0 license, a copy of which is available at <link xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</link></para>
            <para>For complete licensing information, please refer to the LICENSE file that came with this distribution, a copy of which is also available from the DAISY web site at <link xlink:href="http://www.daisy.org">www.daisy.org</link></para>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2012-12-19</date>
                <authorinitials>MGy</authorinitials>
                <revdescription>
                    <para>Initial version</para>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <div>
        <define name="z3998.code.block" xml:id="z3998.code.block">
            <element name="code">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="code (block)">The {code} element (Block)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3998.code"/>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3998.code"/>
                    <synopsis role="def-context">{[[#z3998.Block.class]]}</synopsis>
                    <synopsis role="def-content">{(([[#z3998.code.lngroup]] | [[#z3998.code.ln]])+ | ([[#z3998.p]] | [[#z3998.list]] | [[#z3998.block]] )+)}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Block.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.code.block.attlist"/>
                <ref name="z3998.code.block.content"/>
                <sch:rule context="default:code">
                    <sch:assert test="normalize-space(.) or *">The {code} element must neither be empty nor contain only whitespace.</sch:assert>
                </sch:rule>
            </element>
        </define>
        <define name="z3998.code.block.attlist" xml:id="z3998.code.block.attlist">
            <ref name="z3998.Block.attrib"/>
        </define>
        <define name="z3998.code.block.content" xml:id="z3998.code.block.content">
            <choice>
                <group>
                    <oneOrMore>
                        <choice>
                            <ref name="z3998.code.lngroup"/>
                            <ref name="z3998.code.ln"/>
                            <ref name="z3998.Global.extra.class"/>
                        </choice>
                    </oneOrMore>
                </group>
                <group>
                    <oneOrMore>
                        <choice>
                            <ref name="z3998.Block.basic.model"/>
                            <ref name="z3998.Global.extra.class"/>
                        </choice>
                    </oneOrMore>
                </group>
            </choice>
        </define>
        <define name="z3998.code.lngroup" xml:id="z3998.code.lngroup">
            <element name="lngroup">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="lngroup (code)">The {lngroup} element (code)</title>
                    <para role="desc-main">The {lngroup} element for code represents a grouping of {ln} code elements.</para>
                    <para role="desc-sub">Lines of code may be grouped to show a section of a coded message, a computer program, methods within a program, to separate programs from sample input/output, etc.</para>
                    <synopsis role="def-context" condition="fixed">{[[#z3998.code.block]]}</synopsis>
                    <synopsis role="def-content" condition="The content model must allow {[[#z3998.code.ln ln]]} elements.">{[[#z3998.code.ln]]+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Block.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.code.lngroup.attlist"/>
                <ref name="z3998.code.lngroup.content"/>
            </element>
        </define>
        <define name="z3998.code.lngroup.attlist" xml:id="z3998.code.lngroup.attlist">
            <ref name="z3998.Block.attrib"/>
        </define>
        <define name="z3998.code.lngroup.content" xml:id="z3998.code.lngroup.content">
            <interleave>
                <oneOrMore>
                    <ref name="z3998.code.ln"/>
                </oneOrMore>
                <zeroOrMore>
                    <ref name="z3998.Global.extra.class"/>
                </zeroOrMore>
            </interleave>
        </define>
        <define name="z3998.code.ln" xml:id="z3998.code.ln">
            <element name="ln">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="ln (code)">The {ln} element (code)</title>
                    <para role="desc-main">The {ln} element for the {code} element represents a single line of code.</para>
                    <para role="desc-sub">The {[[#z3998.lnum]]} element can be added at the start of the {ln} for code examples that include line numbers.</para>
                    <synopsis role="def-context" condition="fixed">{[[#z3998.code.block]]} and {[[#z3998.code.lngroup]]} </synopsis>
                    <synopsis role="def-content">{[[#z3998.lnum]]? &amp;amp; (text | [[#z3998.Text.class]])+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Phrase.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.code.ln.attlist"/>
                <ref name="z3998.code.ln.content"/>
            </element>
        </define>
        <define name="z3998.code.ln.attlist" xml:id="z3998.code.ln.attlist">
            <ref name="z3998.Phrase.attrib"/>
        </define>
        <define name="z3998.code.ln.content" xml:id="z3998.code.ln.content">
            <interleave>
                <optional>
                    <ref name="z3998.lnum"/>
                </optional>
                <ref name="z3998.Text.model"/>
            </interleave>
        </define>
    </div>
    <div>
        <define name="z3998.code.phrase" xml:id="z3998.code.phrase">
            <element name="code">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="code (phrase)">The {code} element (Phrase)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3998.code"/>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3998.code"/>
                    <synopsis role="def-context">{[[#z3998.Phrase.class]]}</synopsis>
                    <synopsis role="def-content">{(text | [[#z3998.Text.class]])+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Phrase.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.code.phrase.attlist"/>
                <ref name="z3998.code.phrase.content"/>
            </element>
        </define>
        <define name="z3998.code.phrase.attlist" xml:id="z3998.code.phrase.attlist">
            <ref name="z3998.Phrase.attrib"/>
        </define>
        <define name="z3998.code.phrase.content" xml:id="z3998.code.phrase.content">
            <ref name="z3998.Text.model"/>
        </define>
    </div>
    <div>
        <a:documentation>code - default content model contribution</a:documentation>
        <define name="z3998.Block.core.class" combine="choice">
            <ref name="z3998.code.block"/>
        </define>
        <define name="z3998.Phrase.core.class" combine="choice">
            <ref name="z3998.code.phrase"/>
        </define>
    </div>
</grammar>
