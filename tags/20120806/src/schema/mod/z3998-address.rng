<?xml version="1.0" encoding="utf-8"?>
<grammar ns="http://www.daisy.org/ns/z3998/authoring/" xmlns="http://relaxng.org/ns/structure/1.0" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink">
    <info xmlns="http://docbook.org/ns/docbook">
        <title xreflabel="address">The address module</title>
        <annotation annotates="/">
            <para role="desc-main">This module defines the {[[#z3998.address]]} element for marking up postal, http, email and other types of addresses in documents.</para>
            <simplelist role="def-dependencies">
                <member xlink:href="z3998-global-classes.rng"/>
                <member xlink:href="z3998-line.rng"/>
            </simplelist>
        </annotation>
        <author>
            <personname>Markus Gylling</personname>
            <email>mgylling@daisy.org</email>
        </author>
        <copyright>
            <year>2009</year>
            <year>2010</year>
            <year>2011</year>
            <year>2012</year>
            <holder>DAISY Consortium</holder>
        </copyright>
        <legalnotice>
            <para>This module is licensed under a Creative Commons Attribution 3.0 license, a copy of which is available at <link xlink:href="http://creativecommons.org/licenses/by/3.0/">http://creativecommons.org/licenses/by/3.0/</link></para>
            <para>For complete licensing information, please refer to the LICENSE file that came with this distribution, a copy of which is also available from the DAISY web site at <link xlink:href="http://www.daisy.org">www.daisy.org</link></para>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2012-12-19</date>
                <authorinitials>MGy</authorinitials>
                <revdescription>
                    <para>Initial version</para>
                </revdescription>
            </revision>
        </revhistory>
    </info>
    <div>
        <define name="z3998.address" xml:id="z3998.address">
            <element name="address">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="address (block)">The {address} element (Block)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3998.address"/>
                    <para role="desc-sub">The {Block} variant is an adaptation for use marking multi-line addresses (e.g., postal addresses).</para>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3998.address"/>
                    <synopsis role="def-context">{[[#z3998.Block.class]]}</synopsis>
                    <synopsis role="def-content">{([[#z3998.lngroup]] | [[#z3998.ln]])+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Block.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.address.attlist"/>
                <ref name="z3998.address.content"/>
            </element>
        </define>
        <define name="z3998.address.content" xml:id="z3998.address.content">
            <oneOrMore>
                <choice>
                    <ref name="z3998.lngroup"/>
                    <ref name="z3998.ln"/>
                    <ref name="z3998.Global.extra.class"/>
                </choice>
            </oneOrMore>
        </define>
        <define name="z3998.address.attlist" combine="interleave">
            <!-- expand out Block.attrib in order to allow value suggestion injections on @role -->
            <ref name="z3998.global.core.attrib"/>
            <optional>
                <ref name="z3998.address.role.attrib"/>
            </optional>
            <optional>
                <ref name="z3998.ref.attrib"/>
            </optional>
            <optional>
                <ref name="xlink.attrib"/>
            </optional>
        </define>
        <define name="z3998.address.role.attrib" xml:id="z3998.verse.role.attrib">
            <attribute name="role">
                <list>
                    <oneOrMore>
                        <ref name="z3998.address.role.attrib.content.enum"/>
                    </oneOrMore>
                </list>
            </attribute>
        </define>
        <define name="z3998.address.role.attrib.content.enum" combine="choice">
            <ref name="CURIE.datatype"/>
        </define>
    </div>
    <div>
        <define name="z3998.address.phrase" xml:id="z3998.address.phrase">
            <element name="address">
                <annotation annotates=".." condition="required" xmlns="http://docbook.org/ns/docbook">
                    <title xreflabel="address (phrase)">The {address} element (Phrase)</title>
                    <para role="desc-main" xlink:role="inherit-common" xlink:href="z3998.address"/>
                    <para role="desc-sub">The {Phrase} variant is an adaptation for use for addresses that are embedded within the text flow (typically web and email addresses).</para>
                    <para role="desc-sub" xlink:role="inherit-common" xlink:href="z3998.address"/>
                    <synopsis role="def-context">{[[#z3998.Phrase.class]]}</synopsis>
                    <synopsis role="def-content">{(text | z3998.Text.class | z3998.Phrase.class)+}</synopsis>
                    <synopsis role="def-attlist">{[[#z3998.Phrase.attrib]]}</synopsis>
                </annotation>
                <ref name="z3998.address.phrase.attlist"/>
                <ref name="z3998.address.phrase.content"/>
                <sch:rule context="default:address">
                    <sch:assert test="normalize-space(.) or *">The {address} element must neither be empty nor contain only whitespace.</sch:assert>
                </sch:rule>
            </element>
        </define>
        <define name="z3998.address.phrase.content" xml:id="z3998.address.phrase.content">
            <ref name="z3998.Flow.choice.model"/>
        </define>
        <define name="z3998.address.phrase.attlist" combine="interleave">
            <!-- expand out Phrase.attrib in order to allow value suggestion injections on @role -->
            <ref name="z3998.global.core.attrib"/>
            <optional>
                <ref name="z3998.address.role.attrib"/>
            </optional>
            <ref name="z3998.Phrase.extern.attrib"/>
            <optional>
                <ref name="xlink.attrib"/>
            </optional>
        </define>
    </div>
    <div>
        <a:documentation>address - default content model contribution</a:documentation>
        <define name="z3998.Block.core.class" combine="choice">
            <ref name="z3998.address"/>
        </define>
        <define name="z3998.Phrase.core.class" combine="choice">
            <ref name="z3998.address.phrase"/>
        </define>
    </div>
</grammar>
