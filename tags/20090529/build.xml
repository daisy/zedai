<project name="zednext" default="build-all" basedir=".">
	<!-- common prefixes -->
	<property name="z3986.part.a.prefix" value="z3986a" />
	<property name="z3986.part.b.prefix" value="z3986b" />
	<property name="z3986.part.a.nicename.prefix" value="Z39.86-2010 Authoring and Interchange " />
	<property name="z3986.part.b.nicename.prefix" value="Z39.86-2010 Distribution " />

	<!-- base dirs -->
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.ai.dir" value="${build.dir}/auth" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="src.rd.dir" value="${src.dir}/rd" />
	<property name="src.rdf.dir" value="${src.dir}/rdf" />
	<property name="src.schema.dir" value="${src.dir}/schema" />
	<property name="src.spec.dir" value="${src.dir}/spec" />
	<property name="src.doc.dir" value="${src.dir}/doc" />
	<property name="util.dir" value="${basedir}/util" />
	<property name="temp.dir" value="${basedir}/temp" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="test.z3986a.dir" value="${test.dir}/z3986a" />

	<property name="css.basic.name" value="z3986a-basic.css" />
	<property name="css.basic.path" value="${src.rd.dir}/res/general/${css.basic.name}" />
	<property name="util.rngschema.reducer.xsl" value="${util.dir}/rng/rng-driver-reducer.xsl" />

	<property name="temp.informative.schema.list" value="${temp.dir}/schema-list.xml" />
	<property name="temp.schema.fileset.list" value="${temp.dir}/schema-fileset.xml" />
	<property name="temp.simplified.rng.path" value="${temp.dir}/simplified.rng" />
	<property name="temp.xsd.rng.src.dir" value="${temp.dir}/xsd-rng-src/" />

	<!-- docbook source paths -->
	<property name="spec.part-a.docbook.path" value="${src.spec.dir}/Z3986-2010A.xml" />
	<property name="primer.part-a.docbook.path" value="${src.spec.dir}/Z3986-2010A_Primer.xml" />
	<property name="spec.part-a.output.path" value="${build.dir}/z3986-2010a.html" />
	<property name="primer.part-a.output.path" value="${build.dir}/z3986-2010a-primer.html" />

	<!-- feature names -->
	<property name="feature.machinename.ssml" value="ssml" />
	<property name="feature.nicename.ssml" value="SSML Integration Feature" />
	<property name="feature.machinename.math" value="mathml" />
	<property name="feature.nicename.math" value="MathML Feature" />
	<property name="feature.machinename.ruby" value="its-ruby" />
	<property name="feature.nicename.ruby" value="ITS Ruby Feature" />
	<property name="feature.machinename.select" value="select" />
	<property name="feature.nicename.select" value="Content Selection Feature" />
	<property name="feature.machinename.forms" value="forms" />
	<property name="feature.nicename.forms" value="Print Forms Feature" />
	<property name="feature.machinename.rend" value="rend" />
	<property name="feature.nicename.rend" value="Source Rendition Feature" />

	<property name="www.base.uri" value="http://www.daisy.org/z3986/2010/" />
		
	<propertyset id="feature-machinenames">
		<propertyref prefix="feature.machinename."/>
	</propertyset>

	<!-- profile names -->
	<property name="profile.nicename.book" value="Book Profile" />
	<property name="profile.machinename.book" value="book" />
	<property name="profile.nicename.newsfeeds" value="Newsfeed Aggregator Profile" />
	<property name="profile.machinename.newsfeeds" value="newsfeeds" />
	<property name="profile.nicename.genericdocument" value="Generic Document Profile" />
	<property name="profile.machinename.genericdocument" value="genericdocument" />

	<propertyset id="profile-machinenames">
		<propertyref prefix="profile.machinename."/>
	</propertyset>

	<!-- internal switches -->
	<!-- <property name="switch.build.topology.doc" value="true" /> -->

	<!-- version history (space separated, most current last) -->
	<property name="profile.versionhistory.book" value="0.3" />
	<property name="profile.versionhistory.newsfeeds" value="0.2" />
	<property name="profile.versionhistory.genericdocument" value="0.2" />
	<property name="feature.versionhistory.ssml" value="0.1" />
	<property name="feature.versionhistory.ruby" value="0.3" />
	<property name="feature.versionhistory.math" value="0.1" />
	<property name="feature.versionhistory.select" value="0.0" />
	<property name="feature.versionhistory.forms" value="0.1" />
	<property name="feature.versionhistory.rend" value="0.2" />

	<!-- versions to build (aka current versions) -->
	<property name="profile.version.book" value="0.3" />
	<property name="profile.version.newsfeeds" value="0.2" />
	<property name="profile.version.genericdocument" value="0.2" />
	<property name="feature.version.ssml" value="0.1" />
	<property name="feature.version.ruby" value="0.3" />
	<property name="feature.version.math" value="0.1" />
	<property name="feature.version.select" value="0.0" />
	<property name="feature.version.forms" value="0.1" />
	<property name="feature.version.rend" value="0.2" />

	<target name="build-all" description="build everything" depends="clean-build-dir, validate-src-rng-schemas">

		<antcall target="build-vocab-rng-enums" />

		<antcall target="build-ai-profile-newsfeeds" />
		<antcall target="build-ai-profile-book" />
		<antcall target="build-ai-profile-genericdocument" />

		<antcall target="build-ai-feature-ssml"/>
		<antcall target="build-ai-feature-ruby"/>
		<antcall target="build-ai-feature-math"/>
		<antcall target="build-ai-feature-select"/>
		<antcall target="build-ai-feature-forms"/>
		<antcall target="build-ai-feature-rend"/>

		<antcall target="copy-schemas" />
		<antcall target="build-vocabs" />
		<copy file="${util.dir}/css/common.css" tofile="${build.dir}/z3986-2010.css" />
		<antcall target="build-dir-indices" />
		<antcall target="build-main-index" />

		<antcall target="build-ai-spec"/>

	</target>
	
	<target name="build-vocab-rng-enums"
		description="Render RNG enums from vocabs in /src/rdf/*.
		Note - the rendered enums are put in src/schema/mod dir.">

		<property name="enum.name.prefix" value="z3986-vocab"/>
		<property name="base.vocab" value="${src.rdf.dir}/z3986-base-rdfa-vocab.html"/>

		<!-- aside roles from base vocab -->
		<build-vocab-enum 	input-path="${base.vocab}"
							output-filename="${enum.name.prefix}-base-aside"
							nmtokens="sidebar notice warning practice"
							mode="individual"
							excludes=""
							contrib-names="z3986.aside.role.attrib.content"
							nicename="Aside properties"
							pattern-name="base-aside" />

		<!-- title roles from base vocab -->
		<build-vocab-enum 	input-path="${base.vocab}"
							output-filename="${enum.name.prefix}-base-title"
							nmtokens="title-properties"
							mode="descendant"
							excludes=""
							contrib-names="z3986.title.role.attrib.content"
							nicename="Title properties"
							pattern-name="base-title" />
		
		<!-- annotation roles from base vocab -->
		<build-vocab-enum 	input-path="${base.vocab}"
							output-filename="${enum.name.prefix}-base-anno"
							nmtokens="annotation-properties"
							mode="descendant"
							excludes="annotation"
							contrib-names="annotation.rdfa.property.attrib.content"
							nicename="Annotation properties"
							pattern-name="base-anno" />
		
		<!-- all other properties from base vocab -->
		<build-vocab-enum 	input-path="${base.vocab}"
							output-filename="${enum.name.prefix}-base"
							nmtokens="general-properties frontmatter-properties backmatter-properties"
							mode="descendant"
							excludes="toc aside pagebreak bridgehead footnote"
							contrib-names="xhtml.role.attrib.content"
							nicename="Base properties"
							pattern-name="base" />
	
	</target>

	<macrodef name="build-vocab-enum">
		<attribute name="input-path"/>
		<attribute name="output-filename"/>
		<attribute name="nicename" />
		<attribute name="mode" /> <!-- 'individual' or 'descendant' -->
		<attribute name="excludes" /> <!-- list of props to excludes NMTOKENs -->
		<attribute name="nmtokens"/> <!-- property id's in input vocab -->
		<attribute name="pattern-name"/> <!-- rng name of choice pattern -->
		<attribute name="contrib-names"/> <!-- rng name of defines to contribute to -->

		<sequential>
			<saxon-xslt in="@{input-path}" out="${src.schema.dir}/mod/@{output-filename}.rng" 
				style="${util.dir}/rdf/rdfa-to-rng.xslt">
				<param name="niceName" expression="@{nicename}" />
				<param name="mode" expression="@{mode}" />
				<param name="excludeList" expression="@{excludes}" />
				<param name="includeList" expression="@{nmtokens}" />
				<param name="contribList" expression="@{contrib-names}" />
				<param name="patternName" expression="@{pattern-name}" />
			</saxon-xslt>
		</sequential>
	</macrodef>

	<target name="build-main-index">
		<saxon-xslt in="${util.dir}/xhtml-rdfa-skeleton.xml" 
			style="${util.dir}/web/build-index.xsl" 
				out="${build.dir}/index.html">
			<param name="spec-path" expression="${spec.part-a.output.path}" />
			<param name="primer-path" expression="${primer.part-a.output.path}" />
		</saxon-xslt>
		<build-htaccess dest-dir="${build.dir}" index-name="index.html" />
		
	</target>

	<target name="build-dir-indices">
		<property name="ai-features-index-title" value="${z3986.part.a.nicename.prefix}Feature Catalog" />
		<property refid="feature-machinenames" name="features"/>
		<build-profile-or-feature-dir-index out="${build.ai.dir}/features" 
			list="${features}" title="${ai-features-index-title}" 
				nicename-prefix="${z3986.part.a.nicename.prefix}"/>

		<property name="ai-profiles-index-title" value="${z3986.part.a.nicename.prefix}Profile Catalog" />
		<property refid="profile-machinenames" name="profiles"/>
		<build-profile-or-feature-dir-index out="${build.ai.dir}/profiles" 
			list="${profiles}" title="${ai-profiles-index-title}" 
				nicename-prefix="${z3986.part.a.nicename.prefix}"/>

	</target>

	<macrodef name="build-profile-or-feature-dir-index">
		<attribute name="out"/>
		<attribute name="list"/>
		<attribute name="title"/>
		<attribute name="nicename-prefix"/>

		<sequential>
			<saxon-xslt in="${util.dir}/xhtml-rdfa-skeleton.xml" 
		  				style="${util.dir}/web/build-pf-index.xsl" 
		    		  	out="@{out}/index.html">
				<param name="list" expression="@{list}"/>
				<param name="title" expression="@{title}"/>
				<param name="output-uri" expression="@{out}/index.html"/>
				<param name="nicename-prefix" expression="@{nicename-prefix}"/>
			</saxon-xslt>
			<build-htaccess dest-dir="@{out}" index-name="index.html" />
		</sequential>
	</macrodef>

	<macrodef name="build-htaccess">
		<attribute name="dest-dir" />
		<attribute name="index-name"/>
		<sequential>
<echo file="@{dest-dir}/.htaccess">
# effects subdirectories unless overridden
DirectoryIndex @{index-name}
AddType application/xml rng
AddType application/xml sch
AddType application/xml xsd
AddType application/xml nvdl	
</echo>
		</sequential>
	</macrodef>

	<macrodef name="build-htaccess-plusindexes">
		<attribute name="dest-dir" />
		<sequential>
<echo file="@{dest-dir}/.htaccess">
# effects subdirectories unless overridden
Options +Indexes
AddType application/xml rng
AddType application/xml sch
AddType application/xml xsd
AddType application/xml nvdl
</echo>
		</sequential>
	</macrodef>

	
	<target name="build-ai-feature-ssml">
		<property name="version" value="${feature.version.ssml}" />
		<property name="nicename" value="${feature.nicename.ssml}" />
		<property name="machinename" value="${feature.machinename.ssml}" />
		<property name="version.list"  value="${feature.versionhistory.ssml}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-feature-ruby">
		<property name="version" value="${feature.version.ruby}" />
		<property name="nicename" value="${feature.nicename.ruby}" />
		<property name="machinename" value="${feature.machinename.ruby}" />
		<property name="version.list"  value="${feature.versionhistory.ruby}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-feature-math">
		<property name="version" value="${feature.version.math}" />
		<property name="nicename" value="${feature.nicename.math}" />
		<property name="machinename" value="${feature.machinename.math}" />
		<property name="version.list"  value="${feature.versionhistory.math}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-feature-select">
		<property name="version" value="${feature.version.select}" />
		<property name="nicename" value="${feature.nicename.select}" />
		<property name="machinename" value="${feature.machinename.select}" />
		<property name="version.list"  value="${feature.versionhistory.select}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-feature-forms">
		<property name="version" value="${feature.version.forms}" />
		<property name="nicename" value="${feature.nicename.forms}" />
		<property name="machinename" value="${feature.machinename.forms}" />
		<property name="version.list"  value="${feature.versionhistory.forms}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-feature-rend">
		<property name="version" value="${feature.version.rend}" />
		<property name="nicename" value="${feature.nicename.rend}" />
		<property name="machinename" value="${feature.machinename.rend}" />
		<property name="version.list"  value="${feature.versionhistory.rend}" />
		<antcall target="build-rng-feature-generic"/>
	</target>

	<target name="build-ai-profile-book" depends="clean-temp-dir">
		<build-ai-profile>
			<specific-properties>
				<!-- required -->
				<property name="version" value="${profile.version.book}" />
				<property name="nicename" value="${profile.nicename.book}" />
				<property name="machinename" value="${profile.machinename.book}" />
				<property name="version.list"  value="${profile.versionhistory.book}" />
				<!-- omittable -->
				<property name="default-vocab-uri" value="${src.rdf.dir}/z3986-base-rdfa-vocab.html" />
				<property name="rng-reduce-math" value="true" />
				<property name="rng-reduce-ssml" value="true" />
				<property name="rng-reduce-ruby" value="true" />
				<property name="rng-reduce-select" value="true" />
				<property name="rng-reduce-forms" value="true" />
				<property name="rng-reduce-rend" value="true" />
				<property name="rng-reduce-all" value="true" />
			</specific-properties>
			<echo-generated-schemas>
				<!-- render a file for build-rd.xsl to pick up -->
				<echoxml file="${temp.informative.schema.list}">
					<files>
						<generated type="core-rng-simplified-full" uri="${dest.simplified.rng.path}" />
						<generated type="core-xsd-converted" uri="${dest.xsd.path}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nomath.rng" feature-nicename="${feature.nicename.math}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noruby.rng" feature-nicename="${feature.nicename.ruby}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nossml.rng" feature-nicename="${feature.nicename.ssml}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noselect.rng" feature-nicename="${feature.nicename.select}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noforms.rng" feature-nicename="${feature.nicename.forms}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-norend.rng" feature-nicename="${feature.nicename.rend}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nofeatures.rng" feature-nicename="#all" />
					</files>
				</echoxml>
			</echo-generated-schemas>
		</build-ai-profile>
	</target>

	<target name="build-ai-profile-genericdocument" depends="clean-temp-dir">
		<build-ai-profile>
			<specific-properties>
				<!-- required -->
				<property name="version" value="${profile.version.genericdocument}" />
				<property name="nicename" value="${profile.nicename.genericdocument}" />
				<property name="machinename" value="${profile.machinename.genericdocument}" />
				<property name="version.list"  value="${profile.versionhistory.genericdocument}" />
				<!-- omittable -->
				<!-- Note - no default vocab here! -->
				<property name="rng-reduce-math" value="true" />
				<property name="rng-reduce-ssml" value="true" />
				<property name="rng-reduce-ruby" value="true" />
				<property name="rng-reduce-select" value="true" />
				<property name="rng-reduce-forms" value="true" />
				<property name="rng-reduce-all" value="true" />
			</specific-properties>
			<echo-generated-schemas>
				<!-- render a file for build-rd.xsl to pick up -->
				<echoxml file="${temp.informative.schema.list}">
					<files>
						<generated type="core-rng-simplified-full" uri="${dest.simplified.rng.path}" desc="A single RelaxNG schema with all optional features included" />
						<generated type="core-xsd-converted" uri="${dest.xsd.path}" desc="A W3C XML (XSD) schema with all optional features included" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nomath.rng" feature-nicename="${feature.nicename.math}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noruby.rng" feature-nicename="${feature.nicename.ruby}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nossml.rng" feature-nicename="${feature.nicename.ssml}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noselect.rng" feature-nicename="${feature.nicename.select}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noforms.rng" feature-nicename="${feature.nicename.forms}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-nofeatures.rng" feature-nicename="#all" />
					</files>
				</echoxml>
			</echo-generated-schemas>
		</build-ai-profile>
	</target>

	<target name="build-ai-profile-newsfeeds" depends="clean-temp-dir">
		<build-ai-profile>
			<specific-properties>
				<!-- required -->
				<property name="version" value="${profile.version.newsfeeds}" />
				<property name="nicename" value="${profile.nicename.newsfeeds}" />
				<property name="machinename" value="${profile.machinename.newsfeeds}" />
				<property name="version.list"  value="${profile.versionhistory.newsfeeds}" />
				<!-- omittable -->
				<property name="default-vocab-uri" value="${src.rdf.dir}/z3986-periodicals-rdfa-vocab.html" />
				<property name="rng-reduce-ruby" value="true" />
			</specific-properties>
			<echo-generated-schemas>
				<!-- render a file for build-rd.xsl to pick up -->
				<echoxml file="${temp.informative.schema.list}">
					<files>
						<generated type="core-rng-simplified-full" uri="${dest.simplified.rng.path}" />
						<generated type="core-xsd-converted" uri="${dest.xsd.path}" />
						<generated type="core-rng-reduced" uri="${reduced-schema-base-name}-noruby.rng" feature-nicename="${feature.nicename.ruby}" />
					</files>
				</echoxml>
			</echo-generated-schemas>
		</build-ai-profile>
	</target>

	<macrodef name="build-ai-profile">
		<element name="specific-properties"/>
		<element name="echo-generated-schemas"/>
		<sequential>
			<specific-properties />
			<property name="dest.dir" value="${build.ai.dir}/profiles/${machinename}/${version}" />
			<property name="dest.resources.dir" value="${dest.dir}/resources" />
			<property name="part.prefix" value="${z3986.part.a.prefix}" />
			<property name="normative.schema.path" value="${src.schema.dir}/${part.prefix}-${machinename}.rng" />
			<property name="doc.resources.path" value="${src.doc.dir}/doc-resources-profile-${machinename}.xml" />
			<property name="dest.normative.schema.path" value="${dest.dir}/${part.prefix}-${machinename}.rng" />
			<property name="rd.filename" value="${z3986.part.a.prefix}-profile-${machinename}.rd"/>
			<property name="dest.simplified.rng.path" value="${dest.resources.dir}/${part.prefix}-${machinename}.single.rng" />
			<property name="dest.xsd.path" value="${dest.resources.dir}/${part.prefix}-${machinename}.xsd" />
			<property name="reduced-schema-base-name" value="${dest.dir}/${part.prefix}-${machinename}" />
			<property name="base-identity-uri" value="${www.base.uri}auth/profiles/${machinename}/"/>
			
			<echo message="******** Building Profile: ${nicename} version ${version} ********** " />

			<antcall target="clean-dest-dir" />
			<antcall target="build-rng-schema-fileset-list" />
			<antcall target="copy-normative-schema" />
			<antcall target="validate-dest-rng-schemas" />
			<antcall target="validate-rng-test" />
			<antcall target="build-simplified-rng" />
			<antcall target="build-xsd"/>
			<antcall target="build-rng-schema-doc"/>
			<antcall target="build-reduced-rng-schemas"/>
			<echo-generated-schemas />
			<antcall target="build-rd"/>
			<copy todir="${dest.resources.dir}">
				<fileset dir="${src.rd.dir}/res/profiles/${machinename}/" />
			</copy>
			<copy failonerror="true" file="${css.basic.path}" tofile="${dest.resources.dir}/${css.basic.name}" />
			<zip destfile="${dest.dir}/${part.prefix}-${machinename}-${version}.zip" 
				basedir="${dest.dir}" excludes=".htaccess" />
			<property name="tar" value="${temp.dir}/${part.prefix}-${machinename}-${version}.tar" />
			<tar destfile="${tar}" basedir="${dest.dir}" excludes=".htaccess" />
			<gzip src="${tar}" destfile="${dest.dir}/${part.prefix}-${machinename}-${version}.tar.gz" />

			<antcall target="build-version-index" />

		</sequential>
	</macrodef>


	<target name="build-rng-feature-generic" depends="clean-temp-dir">
		<echo message="******** Building Feature: ${nicename} ********** " />

		<property name="dest.dir" value="${build.ai.dir}/features/${machinename}/${version}" />
		<property name="dest.resources.dir" value="${dest.dir}/resources" />
		<property name="part.prefix" value="${z3986.part.a.prefix}" />
		<property name="normative.schema.path" value="${src.schema.dir}/mod/z3986-feature-${machinename}.rng" />
		<property name="dest.normative.schema.path" value="${dest.dir}/mod/z3986-feature-${machinename}.rng" />
		<property name="rd.filename" value="z3986a-feature-${machinename}.rd"/>
		<property name="base-identity-uri" value="${www.base.uri}auth/features/${machinename}/"/>

		<antcall target="clean-dest-dir" />
		<antcall target="build-rng-schema-fileset-list" />
		<antcall target="copy-normative-schema" />
		<antcall target="validate-dest-rng-schemas" />
		<antcall target="build-rd"/>
		<copy failonerror="false" todir="${dest.resources.dir}">
			<fileset dir="${src.rd.dir}/res/features/${machinename}/" />
		</copy>
		
		<antcall target="build-version-index" />
	</target>

	<target name="build-version-index" description="builds a version index file for a profile or a feature">
		<dirname file="${dest.dir}" property="index.dest.dir"/>

		<saxon-xslt in="${util.dir}/xhtml-rdfa-skeleton.xml" 
			 style="${util.dir}/web/build-pf-version-index.xsl" 
    		  out="${index.dest.dir}/index.html">
			<param name="nicename" expression="${nicename}"/>
			<param name="machinename" expression="${machinename}"/>
			<param name="part.prefix" expression="${part.prefix}"/>
			<param name="part.nicename.prefix" expression="${z3986.part.a.nicename.prefix}"/>
			<param name="version.list" expression="${version.list}"/>
			<param name="current.version" expression="${version}"/>
		</saxon-xslt>
		
		<build-htaccess dest-dir="${index.dest.dir}" index-name="index.html"/>
	</target>

	<target name="copy-normative-schema" description="copies normative schema and used modules to dest dir">
		<!-- path fix for windows -->
		<path id="tmp" path="${dest.dir}" />
		<pathconvert targetos="unix" property="destparam" refid="tmp">
			<map from="" to="file:///" />
		</pathconvert>
		<saxon-xslt in="${temp.schema.fileset.list}" style="${util.dir}/xml-fileset-copy.xsl" out="${temp.dir}/temp.xml">
			<param name="destination-dir" expression="${destparam}/" />
		</saxon-xslt>
		<copy tofile="${dest.normative.schema.path}" file="${normative.schema.path}"/>
	</target>

	<target name="build-rng-schema-doc">
		<!-- path fix for windows -->
		<path id="tmp1" path="${src.doc.dir}/namespaceList.xml" />
		<pathconvert targetos="unix" property="nsList" refid="tmp1">
			<map from="" to="file:///" />
		</pathconvert>
		<path id="tmp2" path="${doc.resources.path}" />
		<pathconvert targetos="unix" property="dr" refid="tmp2">
			<map from="" to="file:///" />
		</pathconvert>

		<saxon-xslt in="${temp.simplified.rng.path}" style="${src.doc.dir}/rng-doc.xsl" 
			  out="${dest.dir}/schemadoc/index.html">
			<param name="docTitle" expression="${nicename}" />
			<param name="namespaceListURI" expression="${nsList}" />
			<param name="docResourceURI" expression="${dr}" />
		</saxon-xslt>

		<copy file="${src.doc.dir}/rng-doc.css" tofile="${dest.dir}/schemadoc/rng-doc.css" />
		<!-- <copy file="${util.dir}/css/common.css" tofile="${dest.dir}/schemadoc/rng-doc.css" />  -->
	</target>


	<target name="build-simplified-rng" description="uses Jing -s to create a simplified rng schema">
		<java jar="${lib.dir}/jing.jar" fork="true" failonerror="true" maxmemory="256m">
			<arg value="-s" />
			<arg value="${normative.schema.path}" />
			<arg value="${temp.simplified.rng.path}" />
			<classpath>
				<pathelement location="${lib.dir}/jing.jar" />
				<pathelement path="${java.class.path}" />
			</classpath>
		</java>
		<copy file="${temp.simplified.rng.path}" tofile="${dest.simplified.rng.path}"/>
	</target>

	<target name="build-xsd-rng-sources"
    	 description="builds a copy of all rng files, run through
    	   rng-xsd-preprocess.xsl, to prep them for trang.">

		<saxon-xslt style="${util.dir}/rng/rng-xsd-preprocess.xsl"
    		basedir="${src.schema.dir}" destdir="${temp.xsd.rng.src.dir}"
    		includes="**/*.rng" extension=".rng">

		</saxon-xslt>
	</target>
	
	<target name="build-xsd" depends="build-xsd-rng-sources">
		
		<property name="simplified.rng.for.trang" value="${temp.xsd.rng.src.dir}/simplified.rng"/>

		<!-- build the simplifed rng using the special rng set rendered
		  by build-xsd-rng.sources -->
		<java jar="${lib.dir}/jing.jar" fork="true" failonerror="true" maxmemory="256m">
			<arg value="-s" />
			<arg value="${temp.xsd.rng.src.dir}/${z3986.part.a.prefix}-${machinename}.rng" />
			<arg value="${simplified.rng.for.trang}" />
			<classpath>
				<pathelement location="${lib.dir}/jing.jar" />
				<pathelement path="${java.class.path}" />
			</classpath>
		</java>

		<!-- trang to xsd -->
		<java jar="${lib.dir}/trang.jar" fork="true" failonerror="true" maxmemory="256m">
			<arg value="${simplified.rng.for.trang}" />
			<arg value="${dest.xsd.path}" />
			<classpath>
				<pathelement location="${lib.dir}/trang.jar" />
				<pathelement path="${java.class.path}" />
			</classpath>
		</java>

		<!-- temp replace with a dummy mathml.xsd TODO fix mathml in xsd -->
		<copy overwrite="true" file="${util.dir}/xsd/mathml-any.xsd" tofile="${dest.resources.dir}/mathml.xsd" failonerror="true" />

		<!-- replace the mods xsd created by trang with the 'real' one -->
		<copy overwrite="true" file="${src.schema.dir}/mod/mods-3-3.xsd" 
			tofile="${dest.resources.dir}/v3.xsd" failonerror="true" />
		
		<echo message="*** Validating sample instances against ${dest.xsd.path}" />
		<schemavalidate disabledtd="true" failonerror="true" fullchecking="true">
			<schema namespace="http://www.daisy.org/z3986/2010/" file="${dest.xsd.path}" />
			<fileset dir="${test.dir}/z3986a/${machinename}/valid/" includes="**/*.xml" />
		</schemavalidate>


	</target>

	<target name="build-rng-schema-fileset-list" 
		description="creates a schema fileset list in xml">		
		<saxon-xslt in="${normative.schema.path}" 
			style="${util.dir}/rng/rng-fileset.xsl" 
			out="${temp.schema.fileset.list}" />		
	</target>

	<target name="copy-schemas">
		<mkdir dir="${build.dir}/schema/" />
		<copy todir="${build.dir}/schema/">
			<fileset dir="${src.dir}/schema/" excludes="**/_*" />
		</copy>
		<build-htaccess-plusindexes dest-dir="${build.dir}/schema/"/>
		<build-htaccess-plusindexes dest-dir="${build.dir}/schema/mod/"/>
	</target>

	<target name="build-vocabs">
		<property name="vocab.dir" value="${build.dir}/vocab"/>
		<mkdir dir="${vocab.dir}" />
		
		<property name="base-vocab-dir" value="${vocab.dir}/print"/>
		<mkdir dir="${base-vocab-dir}" />			
		<property name="base-vocab-name" value="z3986-print-vocab.html"/>
		<copy tofile="${base-vocab-dir}/${base-vocab-name}" file="${src.rdf.dir}/z3986-base-rdfa-vocab.html" />
        <build-htaccess dest-dir="${base-vocab-dir}" index-name="${base-vocab-name}"/>
		
		<property name="book-vocab-dir" value="${vocab.dir}/book"/>
		<mkdir dir="${book-vocab-dir}" />			
		<property name="book-vocab-name" value="z3986-book-vocab.html"/>
		<copy tofile="${book-vocab-dir}/${book-vocab-name}" file="${src.rdf.dir}/z3986-book-rdfa-vocab.html" />
        <build-htaccess dest-dir="${book-vocab-dir}" index-name="${book-vocab-name}"/>
		
		<property name="periodicals-vocab-dir" value="${vocab.dir}/periodicals"/>
		<mkdir dir="${periodicals-vocab-dir}" />			
		<property name="periodicals-vocab-name" value="z3986-periodicals-vocab.html"/>
		<copy tofile="${periodicals-vocab-dir}/${periodicals-vocab-name}" file="${src.rdf.dir}/z3986-periodicals-rdfa-vocab.html" />
		<build-htaccess dest-dir="${periodicals-vocab-dir}" index-name="${periodicals-vocab-name}"/>
		
		<property name="resourcedirectory-vocab-dir" value="${vocab.dir}/resourcedirectory"/>
		<mkdir dir="${resourcedirectory-vocab-dir}" />			
		<property name="resourcedirectory-vocab-name" value="z3986-resourcedirectory-vocab.html"/>
		<copy tofile="${resourcedirectory-vocab-dir}/${resourcedirectory-vocab-name}" file="${src.rdf.dir}/z3986-resourcedirectory-vocab.html" />
		<build-htaccess dest-dir="${resourcedirectory-vocab-dir}" index-name="${resourcedirectory-vocab-name}"/>
		
		<property name="vocab-index-dest" value="${vocab.dir}/index.html"/>
		<saxon-xslt in="${util.dir}/xhtml-rdfa-skeleton.xml" 
			style="${util.dir}/web/build-vocab-index.xsl" 
			out="${vocab-index-dest}">
			<param name="list" expression="print/${base-vocab-name}, book/${book-vocab-name}, periodicals/${periodicals-vocab-name}, resourcedirectory/${resourcedirectory-vocab-name}" />
			<param name="output-uri" expression="${vocab-index-dest}" />
		</saxon-xslt>
		
		<build-htaccess dest-dir="${vocab.dir}" index-name="index.html"/>
			
	</target>

	<target name="rng-to-topology-doc" if="switch.build.topology.doc">
		<saxon-xslt in="${input-rng}" style="${util.dir}/rng/rng-topology.xsl" out="${output-html}">
		</saxon-xslt>
	</target>

	<target name="validate-src-rng-schemas" description="validates all schemas in src dir
	  against the RelaxNG schema for RelaxNG">
		<jing rngfile="${util.dir}/rng/relaxng.rng">
			<fileset dir="${src.dir}/schema" includes="**/*.rng" />
		</jing>
	</target>

	<target name="validate-dest-rng-schemas" description="validates all schemas in dest dir
	  against the RelaxNG schema for RelaxNG">
		<jing rngfile="${util.dir}/rng/relaxng.rng">
			<fileset dir="${dest.dir}" includes="**/*.rng" />
		</jing>
	</target>

	<target name="validate-rng-test" description="validates given dest schema against
      sample instances in /test/ dir">
		<echo message="*** Validating sample instances against ${dest.normative.schema.path}" />
		<jing failonerror="true" rngfile="${dest.normative.schema.path}">
			<fileset dir="${test.dir}/z3986a/${machinename}/valid/" includes="**/*.xml" />
		</jing>
	</target>

	<target name="build-rd" description="builds the resource directory 
		instance for inparam profile or feature">

		<property name="rd.src" value="${src.rd.dir}/${rd.filename}" />
		<property name="rd.dest" value="${dest.dir}/${z3986.part.a.prefix}-${machinename}.html" />

		<!-- fix xslt inparam to be a valid uri (else crash on windows) -->
		<path id="tmp" path="${temp.schema.fileset.list}" />
		<pathconvert targetos="unix" property="uriparam" refid="tmp">
			<map from="" to="file:///" />
		</pathconvert>

		<condition property="hasVocab">
			<not>
			  <contains string="${default-vocab-uri}" substring="default-vocab-uri" />
			</not>
		</condition> 
		
		<saxon-xslt in="${rd.src}" style="${util.dir}/rd/build-rd.xsl" out="${rd.dest}">
			<param name="nicename" expression="${nicename}" />
			<param name="spec-nicename-prefix" expression="${z3986.part.a.nicename.prefix}" />
			<param name="machinename" expression="${machinename}" />
			<param name="version" expression="${version}" />
			<param if="hasVocab" name="default-vocab-uri" expression="${default-vocab-uri}" />
			<param name="schema-fileset" expression="${uriparam}" />
			<param name="part-prefix" expression="${part.prefix}" />
			<param name="normative-schema-uri" expression="${normative.schema.path}" />
			<param name="informative-schema-list" expression="${temp.informative.schema.list}" />
			<param name="base-identity-uri" expression="${base-identity-uri}" />
		</saxon-xslt>

		<build-htaccess dest-dir="${dest.dir}" index-name="${z3986.part.a.prefix}-${machinename}.html"/>
		
		<!-- TODO validate the result -->
	</target>

	<target name="build-ai-spec" depends="validate-ai-spec-sources" description="validates and builds docbook 5 sources">
		<!-- spec: create the HTML version of the docbook5 source -->
		<saxon9-cmd-dbxi in="${spec.part-a.docbook.path}" out="${spec.part-a.output.path}" 
			style="${util.dir}/docbook/xslt/ZedAI_docbook2xhtml.xsl"/>

		<!-- primer: create the HTML version of the docbook5 source -->
		<saxon9-cmd-dbxi in="${primer.part-a.docbook.path}" out="${primer.part-a.output.path}" 
			style="${util.dir}/docbook/xslt/ZedAI_docbook2xhtml.xsl"/>

		<!-- copy the docbook html css -->
		<copy file="${util.dir}/docbook/html-css/docbook.css" tofile="${build.dir}/z3986.css" />

	</target>

	<macrodef name="saxon9-cmd-dbxi" description="docbook xinclude-with-escape enabled transform">
		<attribute name="in" />
		<attribute name="style" />
		<attribute name="out" />
		<sequential>
			<java jar="${lib.dir}/saxon9.jar" fork="true" failonerror="true" maxmemory="256m">
				<arg value="-xi:on" />
				<arg value="-s:@{in}"/>
				<arg value="-xsl:@{style}"/>
				<arg value="-o:@{out}"/>
				<arg value="section.autolabel=1"/>
				<arg value="section.label.includes.component.label=1"/>
				<arg value="html.stylesheet=z3986.css"/>
				<classpath>
					<pathelement location="${lib.dir}/xercesImpl.jar" />
					<pathelement path="${java.class.path}" />
				</classpath>
			</java>
		</sequential>
	</macrodef>

	<target name="validate-ai-spec-sources" description="validate the docbook spec doc sources">
		<jing rngfile="${util.dir}/docbook/rng/docbookxi.rng" file="${spec.part-a.docbook.path}" checkid="true" failonerror="true" />
		<jing rngfile="${util.dir}/docbook/rng/docbookxi.rng" file="${primer.part-a.docbook.path}" checkid="true" failonerror="true" />
	</target>

	<target name="build-reduced-rng-schemas">
		<antcall target="rng-reduce-math" />
		<antcall target="rng-reduce-ruby" />
		<antcall target="rng-reduce-ssml" />
		<antcall target="rng-reduce-select" />
		<antcall target="rng-reduce-forms" />
		<antcall target="rng-reduce-rend" />
		<antcall target="rng-reduce-all" />
	</target>

	<target name="rng-reduce-math" if="rng-reduce-math">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-nomath.rng">
			<param name="excludeList" expression="${feature.machinename.math}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-ruby" if="rng-reduce-ruby">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-noruby.rng">
			<param name="excludeList" expression="${feature.machinename.ruby}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-ssml" if="rng-reduce-ssml">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-nossml.rng">
			<param name="excludeList" expression="${feature.machinename.ssml}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-select" if="rng-reduce-select">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-noselect.rng">
			<param name="excludeList" expression="${feature.machinename.select}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-forms" if="rng-reduce-forms">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-noforms.rng">
			<param name="excludeList" expression="${feature.machinename.forms}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-rend" if="rng-reduce-rend">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-norend.rng">
			<param name="excludeList" expression="${feature.machinename.rend}" />
		</saxon-xslt>
	</target>

	<target name="rng-reduce-all" if="rng-reduce-all">
		<saxon-xslt in="${normative.schema.path}" style="${util.rngschema.reducer.xsl}" out="${reduced-schema-base-name}-nofeatures.rng">
			<param name="excludeList" expression="${feature.machinename.ssml} ${feature.machinename.ruby} ${feature.machinename.math} ${feature.machinename.select} ${feature.machinename.forms} ${feature.machinename.rend}" />
		</saxon-xslt>
	</target>

	<target name="clean-build-dir" description="clean build dir">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${build.dir}" />
		</delete>
		<mkdir dir="${build.dir}" />
	</target>

	<target name="clean-dest-dir" description="clean destination dir (subdir of build dir)">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${dest.dir}" />
		</delete>
		<mkdir dir="${dest.dir}" />
	</target>

	<target name="clean-temp-dir" description="clean temp dir">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${temp.dir}" />
		</delete>
		<mkdir dir="${temp.dir}" />
	</target>

	<target name="build-rng-vocab-enum" description="Builds a RelaxNG enumeration of 
		RDFa vocabulary terms.">
		<saxon-xslt in="${src.rdf.dir}/z3986-${machinename}-rdfa-vocab.html" 
			style="${util.dir}/rdf/rdfa-to-rng.xslt" 
			out="${src.schema.dir}/mod/z3986-${machinename}-vocab.rng">
			<param name="name" expression="${machinename}" />
			<xmlcatalog refid="catalog" />
		</saxon-xslt>
	</target>

	<taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask">
		<classpath>
			<pathelement location="${lib.dir}/jing.jar" />
		</classpath>
	</taskdef>

	<taskdef name="saxon-xslt" classname="net.sf.saxon.ant.AntTransform">
		<classpath>
			<pathelement location="${lib.dir}/saxon9.jar" />
			<pathelement location="${lib.dir}/saxon9-ant.jar" />
		</classpath>
	</taskdef>

	<xmlcatalog id="catalog">
		<dtd publicId="http://www.hdlg.info/XML/filesystem.dtd" location="${util.dir}/cat/filesystem.dtd" />
		<dtd publicId="-//W3C//DTD XHTML+RDFa 1.0//EN" location="${util.dir}/cat/xhtml-rdfa-1.dtd" />
		<entity publicid="-//W3C//ELEMENTS XHTML Base Element 1.0//EN" location="${util.dir}/cat/xhtml-base-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Ruby 1.0//EN" location="${util.dir}/cat/xhtml-ruby-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Forms 1.0//EN" location="${util.dir}/cat/xhtml-basic-form-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Legacy Markup 1.0//EN" location="${util.dir}/cat/xhtml-legacy-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Scripting 1.0//EN" location="${util.dir}/cat/xhtml-script-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Link Element 1.0//EN" location="${util.dir}/cat/xhtml-link-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML BIDI Override Element 1.0//EN" location="${util.dir}/cat/xhtml-bdo-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Lists 1.0//EN" location="${util.dir}/cat/xhtml-list-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Server-side Image Maps 1.0//EN" location="${util.dir}/cat/xhtml-ssismap-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Client-side Image Maps 1.0//EN" location="${util.dir}/cat/xhtml-csismap-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Metainformation 1.0//EN" location="${util.dir}/cat/xhtml-meta-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Document Structure 1.0//EN" location="${util.dir}/cat/xhtml-struct-1.mod" />
		<entity publicid="-//W3C//ENTITIES XHTML Datatypes 1.0//EN" location="${util.dir}/cat/xhtml-datatypes-1.mod" />
		<entity publicid="-//W3C//ENTITIES XHTML MetaAttributes 1.0//EN" location="${util.dir}/cat/xhtml-metaAttributes-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Style Sheets 1.0//EN" location="${util.dir}/cat/xhtml-style-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Editing Elements 1.0//EN" location="${util.dir}/cat/xhtml-edit-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Embedded Object 1.0//EN" location="${util.dir}/cat/xhtml-object-1.mod" />
		<entity publicid="-//W3C//ENTITIES XHTML Modular Framework 1.0//EN" location="${util.dir}/cat/xhtml-framework-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Param Element 1.0//EN" location="${util.dir}/cat/xhtml-param-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Tables 1.0//EN" location="${util.dir}/cat/xhtml-table-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Hypertext 1.0//EN" location="${util.dir}/cat/xhtml-hypertext-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Presentation 1.0//EN" location="${util.dir}/cat/xhtml-pres-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Target 1.0//EN" location="${util.dir}/cat/xhtml-target-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Images 1.0//EN" location="${util.dir}/cat/xhtml-image-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Text 1.0//EN" location="${util.dir}/cat/xhtml-text-1.mod" />
		<entity publicid="-//W3C//ELEMENTS XHTML Inline Style 1.0//EN" location="${util.dir}/cat/xhtml-inlstyle-1.mod" />
		<entity publicid="-//W3C//ENTITIES XHTML+RDFa Document Model 1.0//EN" location="${util.dir}/cat/xhtml-rdfa-model-1.mod" />
		<entity publicid="-//W3C//ENTITIES Symbols for XHTML//EN" location="${util.dir}/cat/xhtml-symbol.ent" />
		<entity publicid="-//W3C//ENTITIES Special for XHTML//EN" location="${util.dir}/cat/xhtml-special.ent" />
		<entity publicid="-//W3C//ENTITIES Latin 1 for XHTML//EN" location="${util.dir}/cat/xhtml-lat1.ent" />
	</xmlcatalog>

	<!--
	<target name="validate-vocabs">		
		<xmlvalidate failonerror="yes" warn="yes" >
			<fileset dir="${rdf.dir}" includes="**/*rdfa*.html"/>
			<xmlcatalog refid="catalog"/>
		</xmlvalidate>	
	</target>
	-->

	<target name="incelim">
	  <saxon-xslt in="${src.schema.dir}/z3986a-book.rng" out="${temp.dir}/incelim/incelim.rng" 
					style="${util.dir}/rng/incelim/incelim.xsl">
					<param name="scope" expression="@{scope}" />
					<param name="pattern.name" expression="@{pattern-name}" />
				</saxon-xslt>
	</target>

	
</project>