<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
  xmlns:dcterms="http://purl.org/dc/terms/"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:z="http://www.daisy.org/z3986/2010/vocab/m12n/#">
  
  <!-- RDF for the module itself -->
  <rdf:RDF>
    <rdf:Description rdf:about="" xml:lang="en">
      <dcterms:title>Foo</dcterms:title>
      <dcterms:description>Provides...</dcterms:description> <!-- Should support wiki link syntax [[linkID linkLabel]], which we prune after generating absdef but before publishing the RNG  module -->      
      <dcterms:publisher>DAISY Consortium</dcterms:publisher>
      <dcterms:license rdf:resource="@@@TODO" />
      <dcterms:creator>John Doe</dcterms:creator> <!-- editor -->      
      <dcterms:creator>Don Joe</dcterms:creator> <!-- editor -->      
      <dcterms:issued>2009-05-28</dcterms:issued> <!-- module birth date -->      
      <dcterms:modified>2009-05-28</dcterms:modified> <!-- module version identifier, may not be present (then version=issued), compare dc:hasVersion. -->         
      <dcterms:isRequiredBy rdf:resource="${Z3986-AI-CANONOICAL-URI}"/> <!-- if present, this module is required in all zedai profiles, else optional -->
      <!-- inter-module dependencies: -->
      <dcterms:isRequiredBy rdf:resource="OtherModuleThatRequiresThis{AUTOGENERATED?}"/>
      <dcterms:isRequiredBy rdf:resource="YetAnotherModuleThatRequiresThis{AUTOGENERATED}"/>      
      <dcterms:requires rdf:resource="OtherModuleThatThisRequires" />
      <dcterms:requires rdf:resource="YetAnotherModuleThatThisRequires" />
    </rdf:Description>
  </rdf:RDF>
  
  <!-- RDF for an element declaration -->
  <define name="z3986-bar">
    <element name="bar" xml:id="foo-bar">
      <rdf:RDF> <!-- note: element placed here to allow transform to a:documentation at module publishing stage -->
        <rdf:Description rdf:about="#foo-bar" xml:lang="en">
          <dcterms:title>Bar</dcterms:title>
          <dcterms:description>Represents a... </dcterms:description> <!-- Formal description, should support wiki link syntax [[linkID linkLabel]] -->
          <dcterms:description rdf:resource="${core-vocab}#frag" /> <!-- alternate to the above, get formal description from a vocab (rdfs:comment child of target rdf:ID), this can contain wiki-link syntax as well, which we need to prune before publishing the vocab -->
          <z:info></z:info> <!-- additional info to be appended to the formal dcterms description... TODO allow markup? or just text + wiki links?-->            
          <z:implements rdf:resource="${core-vocab}#frag" /> <!-- if present, this element "implements" a particular property in the given vocab. Through this link, we get inheritance chains, equivalence statements, and nearby role properties -->            
          <dcterms:isRequiredBy rdf:resource=""/> <!-- if present and resource is empty, then this module does not allow this elem/attr to be removed, else elem can be removed at module import -->                     
          <z:context>[[Structural.class Structural.class]] Blah blah</z:context> <!-- Default Context, Wiki syntax to linkify here too -->          
          <z:content>Blah [[Text.class Text.class]]|[[head.elem head]],[[body.elem body]]|All members of the MathML namespace|Inside [line.elem line]</z:content> <!-- Minimal Content model, Wiki syntax to linkify -->          
          <z:attlist>Blah [Core.attrib.class Core.attrib.class] Blah</z:attlist> <!-- Minimal attribute list, , Wiki syntax to linkify here too --> -->                      
          <!-- <rdfs:seeAlso rdf:resource="anyURI">Link label</rdfs:seeAlso>  general info link -->          
        </rdf:Description>
      </rdf:RDF>
      <text/>
    </element>
  </define>
  
</grammar>