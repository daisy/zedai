<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:x="http://www.w3.org/1999/xhtml">
  <x:h1>Z3986 List Module</x:h1>

  <div>
    <x:h2>The list element</x:h2>
    <x:div id="z3986.list">
      <x:p class="description">Represents various types of lists. The optional <x:code>type</x:code>
        attribute can be used to represent HTML-style ordered and unordered lists.</x:p>
    </x:div>

    <define name="z3986.list.structural">
      <element name="list">
        <ref name="z3986.list.attlist"/>
        <ref name="z3986.list.structural.content"/>
      </element>
    </define>

    <define name="z3986.list.text">
      <element name="list">
        <ref name="z3986.list.attlist"/>
        <ref name="z3986.list.text.content"/>
      </element>
    </define>

    <define name="z3986.list.attlist" combine="interleave">
      <ref name="z3986.Structural.attrib"/>
      <choice>
        <ref name="z3986.list.attlist.ordered"/>
        <ref name="z3986.list.attlist.unordered"/>
        <ref name="z3986.list.attlist.unspecified"/>
      </choice>
    </define>

    <define name="z3986.list.attlist.ordered" combine="interleave">
      <attribute name="type">
        <value>ordered</value>
      </attribute>
      <optional>
        <ref name="z3986.list.start.attrib"/>
      </optional>
    </define>

    <define name="z3986.list.attlist.unordered" combine="interleave">
      <attribute name="type">
        <value>unordered</value>
      </attribute>
    </define>

    <define name="z3986.list.attlist.unspecified">
      <empty/>
    </define>

    <define name="z3986.list.structural.content">
      <oneOrMore>
        <ref name="z3986.item.structural"/>
      </oneOrMore>
    </define>
    
    <define name="z3986.list.text.content">
      <oneOrMore>
        <ref name="z3986.item.text"/>
      </oneOrMore>
    </define>
  </div>

  <div>
    <x:h2>The list start attribute</x:h2>
    <x:div id="z3986.list.start.attrib">
      <x:p>Specifies the ordinal value that this <x:code>list</x:code>s <x:code>item</x:code>
        children prefixes should start from when this <x:code>list</x:code> is an ordered list. This
        attribute must only be present when when this list is specified to be an ordered list, as
        given by the presence and value of the <x:code>type</x:code> attribute.</x:p>
    </x:div>

    <define name="z3986.list.start.attrib">
      <attribute name="start">
        <ref name="Integer.datatype"/>
      </attribute>
    </define>
  </div>

  <div>
    <x:h2>The item element</x:h2>
    <x:div id="z3986.item">
      <x:p class="description">Represents an item in a list.</x:p>
    </x:div>

    <define name="z3986.item.structural">
      <element name="item">
        <ref name="z3986.item.attlist"/>
        <ref name="z3986.item.structural.content"/>
      </element>
    </define>

    <define name="z3986.item.text">
      <element name="item">
        <ref name="z3986.item.attlist"/>
        <ref name="z3986.item.text.content"/>
      </element>
    </define>

    <define name="z3986.item.attlist" combine="interleave">
      <ref name="z3986.Text.attrib"/>
    </define>

    <define name="z3986.item.structural.content">
      <ref name="z3986.Flow.model"/>
    </define>

    <define name="z3986.item.text.content">
      <ref name="z3986.Text.model"/>
    </define>

  </div>

  <div>
    <x:h2>List module - contribution slots</x:h2>

    <define name="z3986.list.text.content" combine="interleave">
      <ref name="z3986.list.extra.model"/>
    </define>

    <define name="z3986.list.structural.content" combine="interleave">
      <ref name="z3986.list.extra.model"/>
    </define>

    <!-- slot for contributing children to the list element  -->
    <define name="z3986.list.extra.class" combine="choice">
      <choice>
        <notAllowed/>
      </choice>
    </define>

    <define name="z3986.list.extra.model">
      <zeroOrMore>
        <ref name="z3986.list.extra.class"/>
      </zeroOrMore>
    </define>

  </div>

  <div>
    <x:h2>List module - default content model contribution</x:h2>

    <define name="z3986.Text.class" combine="choice">
      <ref name="z3986.list.text"/>
    </define>

    <define name="z3986.Structural.class" combine="choice">
      <ref name="z3986.list.structural"/>
    </define>

  </div>

</grammar>
